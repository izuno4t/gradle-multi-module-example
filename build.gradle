// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        gradlePluginPortal()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
        classpath 'org.postgresql:postgresql:42.2.18'
        classpath "gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.6.2"
        classpath "de.aaschmid:gradle-cpd-plugin:3.1"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.38.0"
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
}

subprojects {

    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: "com.github.ben-manes.versions"

    apply from: "$rootDir/gradle/checkstyle.gradle"
    apply from: "$rootDir/gradle/spotbugs.gradle"
    apply from: "$rootDir/gradle/pmd.gradle"
    apply from: "$rootDir/gradle/cpd.gradle"
    apply from: "$rootDir/gradle/jacoco.gradle"

    group = 'com.example'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    [compileJava, compileTestJava]*.options*.encoding = "UTF-8"
    [compileJava, compileTestJava]*.options*.compilerArgs = ["-Xlint:all,-options,-processing,-path"]

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:2.4.5"
            mavenBom "org.junit:junit-bom:5.7.1"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        implementation 'org.postgresql:postgresql:42.2.18'

        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        testImplementation 'org.mockito:mockito-core:3.+'
        testImplementation 'org.mockito:mockito-junit-jupiter:3.+'
        testImplementation 'org.mockito:mockito-inline:3.+'
        testImplementation 'com.h2database:h2:1.+'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }
}

apply plugin: "org.sonarqube"

sonarqube {
    properties {
        property "sonar.projectKey", "izuno4t_gradle-multi-project-example"
    }
}
